import { Polygon } from "../library/GameMath.js";
import { shapeFactory } from "./game.js";


interface LevelData {
    shapes: number[][][];
    exit?: number[][]
    image?: string;
}
interface LevelObject {
    shapes: Polygon[];
    exit: Polygon;
    image: HTMLImageElement | null;
}
let levelData: LevelData[] = [
    {
        "shapes": [
            [[120, 60], [300, 60], [300, 700], [120, 700]], [[-200, 700], [1780, 700], [1780, 780], [-200, 780]], [[300, 120], [1860, 120], [1940, 220], [300, 220]], [[880, 500], [1000, 500], [1180, 700], [700, 700]], [[1740, 540], [1780, 540], [1780, 700], [1660, 620]], [[1840, 620], [1920, 620], [1920, 720], [1840, 800]], [[1872.3018215624852, 139.05203820042823], [2520, 420], [2320, 600], [1900, 180]], [[2280, 500], [2396.4995667241146, 539.0208152801713], [2400, 1260], [2280, 1260]], [[1680, 780], [1780, 780], [1780, 1020], [1680, 1020]], [[-200, 1260], [2360, 1260], [2360, 1320], [-200, 1320]], [[1120, 780], [1160, 780], [1160, 1080], [1120, 1080]], [[580, 1020], [640, 1020], [640, 1080], [580, 1080]], [[-200, 780], [-140, 780], [-140, 1260], [-200, 1260]], [[1780, 540], [1840, 540], [1920, 620], [1780, 620]], [[1660, 620], [1720, 660], [1780, 700], [1660, 700]], [[1780, 620], [1840, 620], [1840, 800], [1780, 800]]],
        "exit": [[-120, 800], [160, 800], [160, 1240], [-120, 1240]],
        "image": "game/images/level1.png"
    },
    {
        "shapes": [
            [[160, 300], [220, 300], [220, 760], [160, 760]], [[220, 720], [700, 720], [700, 780], [220, 780]], [[700, -380], [760, -380], [760, 720], [700, 720]], [[340, 120], [400, 120], [400, 180], [340, 180]], [[-300, -60], [220, -60], [220, 300], [-300, 300]], [[20, -380], [20, -520], [220, -300], [100, -300]], [[100, -620], [200, -620], [280, -520], [20, -520]], [[200, -620], [700, -620], [700, -380], [200, -380]], [[20, -520], [260, -520], [320, -380], [220, -300]], [[-320, -160], [-380, -380], [-20, -20], [-300, -20]], [[340, -1020], [520, -1200], [520, -580], [340, -580]], [[-180, -1640], [-20, -1480], [-220, -1280], [-380, -1440]], [[-140, -1600], [520, -1600], [520, -1440], [-140, -1440]], [[500, -1060], [940, -1060], [940, -1020], [500, -1020]], [[940, -1660], [1180, -1520], [1160, -1080], [940, -960]], [[520, -1680], [856.5923689331025, -1693.5732867564875], [1100, -1560], [520, -1560]], [[-300, -1280], [-220, -1280], [-220, -220], [-300, -220]]],
            "exit": [[820, -1540], [920, -1540], [920, -1080], [820, -1080]],
            "image": "game/images/level2.png"
    },
    {
        "shapes": [
            [[120, 60], [700, 60], [700, 240], [120, 240]], [[280, 720], [280, 240], [100, 240], [100, 720]], [[700, 220], [923, 316.5], [923, 416.5], [700, 1360]], [[100, 720], [280, 720], [280, 840], [100, 840]], [[100, 840], [280, 840], [220, 900], [160, 900]], [[-320, 720], [-140, 720], [-140, 840], [-320, 840]], [[-320, 840], [-140, 840], [-200, 900], [-260, 900]], [[-320, 480], [-140, 480], [-140, 720], [-320, 720]], [[-3080, 1140], [1040, 1140], [1040, 1260], [-3080, 1260]], [[-1020, 860], [-940, 860], [-940, 940], [-1020, 940]], [[-1320, 860], [-1240, 860], [-1240, 940], [-1320, 940]], [[-1640, 540], [-300, 540], [-300, 660], [-1640, 660]], [[-1620, 860], [-1540, 860], [-1540, 940], [-1620, 940]], [[-1640, -120], [-1520, -120], [-1520, 540], [-1640, 540]], [[-1920, 860], [-1840, 860], [-1840, 940], [-1920, 940]], [[-1920, 560], [-1840, 560], [-1840, 640], [-1920, 640]], [[-2220, 560], [-2140, 560], [-2140, 640], [-2220, 640]], [[-2220, 860], [-2140, 860], [-2140, 940], [-2220, 940]], [[-2220, 260], [-2140, 260], [-2140, 340], [-2220, 340]], [[-1920, 260], [-1840, 260], [-1840, 340], [-1920, 340]], [[-2160, 0], [-1460, 0], [-1460, 60], [-2240, 60]], [[-2520, 260], [-2440, 260], [-2440, 340], [-2520, 340]], [[-2520, 560], [-2440, 560], [-2440, 640], [-2520, 640]], [[-2520, 860], [-2440, 860], [-2440, 940], [-2520, 940]], [[-2240, -840], [-2180, -300], [-2180, -40], [-2240, 40]], [[-2840, -180], [-2720, -820], [-2720, 1180], [-2840, 1180]], [[-2520, -40], [-2440, -40], [-2440, 40], [-2520, 40]], [[-2597.916738879325, -935.3954903232546], [-2497.916738879325, -935.3954903232546], [-2160, -840], [-2860, -840]]
        ],
        "exit": [[-2700, -800], [-2260, -800], [-2260, -440], [-2700, -440]],
        "image": "game/images/level3.png"
    },
    {
        "shapes": [
            [[100, 240], [220, 240], [220, 720], [100, 720]], [[400, 80], [580, 80], [700, 240], [400, 240]], [[760, 220], [820, 240], [820, 840], [760, 960]], [[-200, 720], [520, 720], [520, 780], [-200, 780]], [[760, 960], [840, 980], [920, 1140], [520, 1200]], [[-320, 1200], [640, 1200], [385.85429303880096, 1264.145706961199], [285.85429303880096, 1264.145706961199]], [[-500, -380], [-440, -420], [-440, 960], [-500, 960]], [[-640, 1040], [-440, 960], [-200, 1200], [-500, 1280]], [[-140, 60], [-80, 0], [160, 240], [100, 300]], [[-440, -540], [1240, -500], [1240, -300], [-440, -300]], [[400, -60], [580, -60], [580, 80], [400, 80]], [[580, 180], [1520, 180], [1520, 220], [580, 220]], [[1240, -360], [1400, -360], [1400, 180], [1240, 180]], [[60, 180], [400, 180], [400, 240], [160, 240]]
        ],
        "exit": [[940, -260], [1180, -260], [1180, 160], [940, 160]],
        "image": "game/images/level4.png"
    },
    {
        "shapes": [
            [[160, 240], [880, 240], [880, 300], [160, 300]], [[100, 300], [160, 300], [160, 3060], [100, 3060]], [[820, 300], [880, 300], [880, 3060], [820, 3060]], [[280, 840], [400, 840], [400, 960], [280, 960]], [[580, 1080], [700, 1080], [700, 1200], [580, 1200]], [[340, 1320], [460, 1320], [460, 1440], [340, 1440]], [[700, 1320], [820, 1320], [820, 1440], [700, 1440]], [[520, 1560], [640, 1560], [640, 1680], [520, 1680]], [[160, 1680], [340, 1680], [340, 1800], [160, 1800]], [[580, 1860], [700, 1860], [700, 1980], [580, 1980]], [[280, 1980], [400, 1980], [400, 2100], [280, 2100]], [[460, 2280], [580, 2280], [580, 2400], [460, 2400]], [[40, 3060], [940, 3060], [940, 3120], [40, 3120]]
        ],
        "exit": [[220, 2820], [760, 2820], [760, 3040], [220, 3040]],
        "image": "game/images/level5.png"
    },
    {
        "shapes": [
            [[120, 20], [280, 20], [280, 660], [120, 660]], [[100, 720], [880, 720], [880, 1140], [100, 1140]], [[700, 240], [880, 240], [880, 720], [700, 720]], [[460, 120], [580, 120], [540, 300], [500, 300]], [[640, -60], [680, 20], [580, 120], [460, 120]], [[640, -60], [940, -60], [900, 20], [680, 20]], [[900, 20], [940, -60], [1120, 120], [1000, 120]], [[1000, 120], [1120, 120], [1080, 240], [1040, 240]], [[520, -380], [520, -240], [280, 0], [120, 0]], [[540, -380], [1040, -380], [1040, -240], [540, -240]], [[1060, -380], [1480, 0], [1300, 0], [1060, -240]], [[1360, 20], [1480, 20], [1480, 1140], [1360, 1140]], [[760, 180], [820, 180], [880, 240], [700, 240]]
        ],
        "exit": [[940, 760], [1300, 760], [1300, 940], [940, 940]],
        "image": "game/images/level6.png"
    }
]

export class LevelManager {
    
    currentLevelIndex = 0;
    levels: LevelObject[]

    constructor() {

        this.levels = levelData.map(level => {
            let shapes = level.shapes.map(v => {
                return shapeFactory.createPolygon(v)
            })
            let exit: Polygon | null = null;
            if (level.exit) {
                exit = shapeFactory.createPolygon(level.exit)
            }
            let image;
            if (level.image){
                image = new Image()
                image.src = level.image || '';
            }
            return <LevelObject>{ shapes, exit, image }
        })
    }
    set currentLevel(level) {
        this.currentLevelIndex = this.levels.length
        this.levels.push(level)
    }
    get currentLevel() {
        return this.levels[this.currentLevelIndex];
    }
    setLevel(num) {
        console.log(num)
        if (num < this.levels.length && num >= 0) {

            this.currentLevelIndex = num;
            return true
        } else {
            return false;
        }
    }
    nextLevel() {
        return this.setLevel(this.currentLevelIndex + 1)
    }
    previousLevel() {
        return this.setLevel(this.currentLevelIndex - 1)
    }
    getShapes() {
        return this.currentLevel.shapes;
    }
    getExit() {
        return this.currentLevel.exit;
    }
    getImage() {
        return this.currentLevel.image ?? null;
    }
    addBox(x, y) {
        console.log(this.levels, this.currentLevelIndex)
        this.currentLevel.shapes.push(
            shapeFactory.createPolygon([
                [x - 50, y - 50],
                [x + 50, y - 50],
                [x + 50, y + 50],
                [x - 50, y + 50],
            ])
        )
    }
    loadFromMemory() {
        if (localStorage.getItem('level')) {
            let shapeData = JSON.parse(localStorage.getItem('level') || '')
            this.currentLevelIndex = -1
            this.currentLevel = <LevelObject>{}

            let shapes: Polygon[] = [];
            for (let data of shapeData) {
                shapes.push(eval(data))
            }
            this.currentLevel.shapes = shapes;
        }
    }
    printShapes() {
        let strings: string[] = [];
        for (let shape of this.getShapes()) {
            if (shape instanceof Polygon) {
                strings.push(shape.printLines())
            } else {
                console.log("couldn't print shape")
            }
        }
        let combinedString = strings.join(", ")
        console.log(`[${combinedString}]`)
    }
}